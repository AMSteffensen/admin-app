{"version":3,"sources":["components/auth/LoginForm.js","components/posts/PostsList.js","components/posts/PostsCreate.js","components/posts/PostsEdit.js","authProvider.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","PostsList","props","List","Datagrid","title","TextField","source","DateField","EditButton","basePath","DeleteButton","PostsCreate","Create","SimpleForm","TextInput","multiline","DateInput","label","PostsEdit","Edit","disabled","login","username","localStorage","setItem","Promise","resolve","logout","removeItem","checkError","status","reject","checkAuth","getItem","getPermissions","App","Admin","dataProvider","restProvider","authProvider","Resource","name","list","PostList","create","PostCreate","edit","PostEdit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAkDeA,I,iFCrBAC,MAdf,SAAmBC,GACjB,OACE,cAACC,EAAA,EAAD,2BAAUD,GAAV,aACE,eAACE,EAAA,EAAD,CAAUC,MAAM,cAAhB,UACE,cAACC,EAAA,EAAD,CAAWC,OAAO,OAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,cAACC,EAAA,EAAD,CAAWD,OAAO,cAClB,cAACE,EAAA,EAAD,CAAYC,SAAS,WACrB,cAACC,EAAA,EAAD,CAAcD,SAAS,kB,oCCThBE,MAZf,SAAqBV,GACnB,OACE,cAACW,EAAA,EAAD,yBAAQR,MAAM,0BAA6BH,GAA3C,aACE,eAACY,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWR,OAAO,UAClB,cAACQ,EAAA,EAAD,CAAWC,WAAS,EAACT,OAAO,SAC5B,cAACU,EAAA,EAAD,CAAWC,MAAM,YAAYX,OAAO,qB,SCO7BY,MAbf,SAAmBjB,GACjB,OACE,cAACkB,EAAA,EAAD,yBAAMf,MAAM,iBAAoBH,GAAhC,aACE,eAACY,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWM,UAAQ,EAACd,OAAO,OAC3B,cAACQ,EAAA,EAAD,CAAWR,OAAO,UAClB,cAACQ,EAAA,EAAD,CAAWC,WAAS,EAACT,OAAO,SAC5B,cAACU,EAAA,EAAD,CAAWC,MAAM,YAAYX,OAAO,qBCR7B,GAEbe,MAAO,YAAmB,IAAhBC,EAAe,EAAfA,SAGR,OAFAC,aAAaC,QAAQ,WAAYF,GAE1BG,QAAQC,WAGjBC,OAAQ,WAEN,OADAJ,aAAaK,WAAW,YACjBH,QAAQC,WAGjBG,WAAY,YAAiB,IAAdC,EAAa,EAAbA,OACb,OAAe,MAAXA,GAA6B,MAAXA,GACpBP,aAAaK,WAAW,YACjBH,QAAQM,UAEVN,QAAQC,WAGjBM,UAAW,WACT,OAAOT,aAAaU,QAAQ,YACxBR,QAAQC,UACRD,QAAQM,UAGdG,eAAgB,kBAAMT,QAAQC,Y,OCDjBS,MAhBf,WACE,OACE,cAACC,EAAA,EAAD,CACEC,aAAcC,YAAa,yBAC3BC,aAAcA,EAFhB,SAIE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,KAAMC,EACNC,OAAQC,EACRC,KAAMC,OCTCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2aed512f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction LoginForm({ Login, error }) {\n  const [details, setDetails] = useState({ name: \"\", email: \"\", password: \"\" });\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    Login(details);\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"form-inner\">\n        <h2>Login</h2>\n        {error != \"\" ? <div className=\"error\">{error}</div> : \"\"}\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            onChange={(e) => setDetails({ ...details, name: e.target.value })}\n            value={details.name}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\">Email: </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            onChange={(e) => setDetails({ ...details, email: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            onChange={(e) =>\n              setDetails({ ...details, password: e.target.value })\n            }\n          />\n          <input type=\"submit\" value=\"LOGIN\" />\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  Edit,\n  Create,\n  SimpleForm,\n  DateField,\n  TextField,\n  EditButton,\n  TextInput,\n  DateInput,\n  DeleteButton,\n} from \"react-admin\";\n\nfunction PostsList(props) {\n  return (\n    <List {...props}>\n      <Datagrid title=\"Dine poster\">\n        <TextField source=\"id\"></TextField>\n        <TextField source=\"title\"></TextField>\n        <DateField source=\"publisert\"></DateField>\n        <EditButton basePath=\"/posts\"></EditButton>\n        <DeleteButton basePath=\"/posts\"></DeleteButton>\n      </Datagrid>\n    </List>\n  );\n}\n\nexport default PostsList;\n","import React from \"react\";\nimport { Create, SimpleForm, TextInput, DateInput } from \"react-admin\";\nfunction PostsCreate(props) {\n  return (\n    <Create title=\"Skriv in dagens status\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"title\"></TextInput>\n        <TextInput multiline source=\"body\"></TextInput>\n        <DateInput label=\"Publisert\" source=\"publisert\"></DateInput>\n      </SimpleForm>\n    </Create>\n  );\n}\n\nexport default PostsCreate;\n","import React from \"react\";\nimport { Edit, SimpleForm, TextInput, DateInput } from \"react-admin\";\nfunction PostsEdit(props) {\n  return (\n    <Edit title=\"Endre en post\" {...props}>\n      <SimpleForm>\n        <TextInput disabled source=\"id\"></TextInput>\n        <TextInput source=\"title\"></TextInput>\n        <TextInput multiline source=\"body\"></TextInput>\n        <DateInput label=\"Publisert\" source=\"publisert\"></DateInput>\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport default PostsEdit;\n","// in src/authProvider.js\nexport default {\n  // called when the user attempts to log in\n  login: ({ username }) => {\n    localStorage.setItem(\"username\", username);\n    // accept all username/password combinations\n    return Promise.resolve();\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    localStorage.removeItem(\"username\");\n    return Promise.resolve();\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"username\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    return localStorage.getItem(\"username\")\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve(),\n};\n","import React, { useState } from \"react\";\nimport LoginForm from \"./components/auth/LoginForm\";\nimport { Admin, Resource } from \"react-admin\";\nimport restProvider from \"ra-data-simple-rest\";\nimport PostList from \"./components/posts/PostsList\";\nimport PostCreate from \"./components/posts/PostsCreate\";\nimport PostEdit from \"./components/posts/PostsEdit\";\nimport authProvider from \"./authProvider\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Admin\n      dataProvider={restProvider(\"http://localhost:3000\")}\n      authProvider={authProvider}\n    >\n      <Resource\n        name=\"posts\"\n        list={PostList}\n        create={PostCreate}\n        edit={PostEdit}\n      ></Resource>\n    </Admin>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}